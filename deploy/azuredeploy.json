{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "environment": {
      "type": "string",
      "defaultValue": "DEV"
    },
    "customHostName": {
      "type": "string"
    },
    "customHostNameSlot": {
      "type": "string"
    },
    "region": {
      "type": "string",
      "defaultValue": "EUR-FR"
    },
    "primaryRegion": {
      "type": "string",
      "defaultValue": "EUR-FR"
    },
    "location": {
      "type": "string",
      "defaultValue": "westeurope"
    },
    "acrName": {
      "type": "string",
      "minLength": 5,
      "maxLength": 50,
      "metadata": {
        "description": "Name of your Azure Container Registry"
      }
    },
    "acrAdminUserEnabled": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Enable admin user that have push / pull permission to the registry."
      }
    },
    "acrSku": {
      "type": "string",
      "metadata": {
        "description": "Tier of your Azure Container Registry."
      },
      "defaultValue": "Basic",
      "allowedValues": ["Basic", "Standard", "Premium"]
    },
    "DD_TRACE_AGENT_HOSTNAME": {
      "type": "string",
      "metadata": {
        "description": ""
      }
    },
    "DD_API_KEY": {
      "type": "string",
      "metadata": {
        "description": ""
      }
    },
    "SENTRY_DSN": {
      "type": "string",
      "metadata": {
        "description": ""
      }
    },
    "webAppName": {
      "type": "string",
      "metadata": {
        "description": "Base name of the resource such as web app name and app service plan "
      },
      "minLength": 2
    },
    "sku": {
      "type": "string",
      "defaultValue": "S1",
      "metadata": {
        "description": "The SKU of App Service Plan "
      }
    },
    "registryName": {
      "type": "string",
      "defaultValue": "yosswebsocket",
      "metadata": {
        "description": "Registry to use"
      }
    }
  },
  "variables": {
    "location": "[parameters('location')]",

    "redisName": "[concat('REDIS-', parameters('primaryRegion'), '-', parameters('environment'), '-Shakhr')]",
    "redisHost": "[concat(variables('redisName'), '.redis.cache.windows.net')]",

    "UmServiceUri": "[concat('https://wa-',toLower(parameters('region')),'-',toLower(parameters('environment')),'-shakhrserviceum.azurewebsites.net')]",
    "RdServiceUri": "[concat('https://wa-',toLower(parameters('region')),'-',toLower(parameters('environment')),'-shakhrservicerd.azurewebsites.net')]",

    "stagingSlotName": "Staging",
    "webResourceType": "WA",
    "webAppPortalName": "[concat(variables('webResourceType'), '-', parameters('primaryRegion'), '-', parameters('environment'), '-', parameters('webAppName'), '-', parameters('webAppName'))]",
    "appServicePlanName": "[concat('ASP', '-', parameters('primaryRegion'), '-', parameters('environment'), '-', parameters('webAppName'))]",

    "mainResourceGroupName": "[concat('RG','-',parameters('primaryRegion'),'-',parameters('environment'),'-', 'Shakhr')]",
    "webAppPortalNameStageSlotFullname": "[concat(variables('webAppPortalName'),'/',variables('stagingSlotName'))]",

    "deployVaultName": "[concat('AKV','-',parameters('primaryRegion'),'-',parameters('environment'),'-', 'Deploy')]",
    "certificateName": "[concat('AAD','-',parameters('region'),'-',parameters('environment'),'-', 'ShakhrServices')]",
    "certificateNameInVault": "[concat('AAD','-',parameters('primaryRegion'),'-',parameters('environment'),'-', 'ShakhrServices')]",
    "webappYossCertificateName": "[concat(variables('webResourceType'),'-',parameters('region'),'-',parameters('environment'),'-ShakhrFront')]",
    "webappYossCertificateNameInVault": "[concat(variables('webResourceType'),'-',parameters('primaryRegion'),'-',parameters('environment'),'-ShakhrFront')]"
  },
  "resources": [
    {
      "type": "Microsoft.Web/certificates",
      "apiVersion": "2016-03-01",
      "name": "[variables('certificateName')]",
      "location": "[variables('location')]",
      "properties": {
        "KeyVaultId": "[resourceId(variables('mainResourceGroupName'),'Microsoft.KeyVault/vaults', variables('deployVaultName'))]",
        "KeyVaultSecretName": "[variables('certificateName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
      },
      "dependsOn": ["[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"]
    },
    {
      "type": "Microsoft.Web/certificates",
      "apiVersion": "2016-03-01",
      "name": "[variables('webappYossCertificateName')]",
      "location": "[variables('location')]",
      "properties": {
        "KeyVaultId": "[resourceId(variables('mainResourceGroupName'),'Microsoft.KeyVault/vaults', variables('deployVaultName'))]",
        "KeyVaultSecretName": "[variables('webappYossCertificateName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
      },
      "dependsOn": ["[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"]
    },
    {
      "type": "Microsoft.Web/sites/hostnameBindings",
      "name": "[concat(variables('webAppPortalName'), '/', parameters('customHostName'))]",
      "apiVersion": "2016-03-01",
      "location": "[variables('location')]",
      "properties": {
        "sslState": "SniEnabled",
        "thumbprint": "[reference(resourceId('Microsoft.Web/certificates', variables('webappYossCertificateName'))).Thumbprint]"
      },
      "dependsOn": [
        "[concat('Microsoft.Web/certificates/',variables('webappYossCertificateName'))]",
        "[resourceId('Microsoft.Web/sites', variables('webAppPortalName'))]"
      ]
    },
    {
      "name": "[parameters('acrName')]",
      "type": "Microsoft.ContainerRegistry/registries",
      "apiVersion": "2017-10-01",
      "location": "[parameters('location')]",
      "comments": "Container registry for storing yoss docker images",
      "tags": {
        "displayName": "container.registry",
        "container.registry": "[parameters('acrName')]"
      },
      "sku": {
        "name": "[parameters('acrSku')]",
        "tier": "[parameters('acrSku')]"
      },
      "properties": {
        "adminUserEnabled": "[parameters('acrAdminUserEnabled')]"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2016-09-01",
      "kind": "linux",
      "name": "[variables('appServicePlanName')]",
      "location": "[parameters('location')]",
      "comments": "This app service plan is used for the web app and slots.",
      "dependsOn": [],
      "properties": {
        "name": "[variables('appServicePlanName')]",
        "workerTierName": null,
        "adminSiteName": null,
        "hostingEnvironmentProfile": null,
        "perSiteScaling": false,
        "reserved": true,
        "targetWorkerCount": 0,
        "targetWorkerSizeId": 0
      },
      "sku": {
        "name": "[parameters('sku')]"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2016-08-01",
      "kind": "app,linux",
      "name": "[variables('webAppPortalName')]",
      "location": "[parameters('location')]",
      "comments": "This is the web app, also the default 'nameless' slot.",
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "httpsOnly": true,
        "siteConfig": {
          "name": "[parameters('webAppName')]",
          "appSettings": [
            { "name": "NODE_ENV", "value": "production" },
            { "name": "REDIS_HOST", "value": "[variables('redisHost')]" },
            { "name": "REDIS_PORT", "value": "6380" },
            {
              "name": "REDIS_PASSWORD",
              "value": "[listKeys(resourceId(variables('mainResourceGroupName'), 'Microsoft.Cache/Redis', variables('redisName')), '2015-08-01').primaryKey]"
            },
            { "name": "REDIS_TLS", "value": "true" },
            { "name": "DD_TRACE_AGENT_HOSTNAME", "value": "[parameters('DD_TRACE_AGENT_HOSTNAME')]" },
            { "name": "DD_API_KEY", "value": "[parameters('DD_API_KEY')]" },
            { "name": "DD_SERVICE_NAME", "value": "yoss-api" },
            { "name": "DD_ENV", "value": "[parameters('environment')]" },
            { "name": "SENTRY_DSN", "value": "[parameters('SENTRY_DSN')]" },
            { "name": "WEBSITES_ENABLE_APP_SERVICE_STORAGE", "value": "false" },
            {
              "name": "DOCKER_REGISTRY_SERVER_URL",
              "value": "[reference(resourceId('Microsoft.ContainerRegistry/registries', parameters('acrName'))).loginServer]"
            },
            {
              "name": "DOCKER_REGISTRY_SERVER_USERNAME",
              "value": "[parameters('acrName')]"
            },
            {
              "name": "DOCKER_REGISTRY_SERVER_PASSWORD",
              "value": "[listCredentials(resourceId('Microsoft.ContainerRegistry/registries',parameters('acrName')),'2017-03-01').passwords[0].value]"
            },
            {
              "name": "DOCKER_CUSTOM_IMAGE_NAME",
              "value": "[concat(parameters('registryName'), ':latest')]"
            },
            {
              "name": "DOCKER_ENABLE_CI",
              "value": "true"
            }
          ],
          "appCommandLine": "",
          "linuxFxVersion": "[concat('DOCKER|', replace(replace(reference(resourceId('Microsoft.ContainerRegistry/registries', parameters('acrName'))).loginServer,'http://', ''),'https://', ''), '/', parameters('registryName'), ':latest')]"
        }
      },
      "dependsOn": ["[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"],
      "resources": [
        {
          "name": "appsettings",
          "type": "config",
          "apiVersion": "2016-08-01",
          "dependsOn": ["[resourceId('Microsoft.Web/sites', variables('webAppPortalName'))]"],
          "tags": {
            "displayName": "Application settings"
          },
          "properties": {
            "NODE_ENV": "production",
            "REDIS_HOST": "[variables('redisHost')]",
            "REDIS_PORT": "6380",
            "REDIS_PASSWORD": "[listKeys(resourceId(variables('mainResourceGroupName'), 'Microsoft.Cache/Redis', variables('redisName')), '2015-08-01').primaryKey]",
            "REDIS_TLS": "true",
            "DEBUG_HAPI_TO_CONSOLE": "true",
            "LOG_IN_JSON": "true",
            "LOG_LEVEL": "debug",
            "PORT": "80",
            "UM_API_URL": "[variables('UmServiceUri')]",
            "RD_API_URL": "[variables('RdServiceUri')]",
            "AB2C_JWK_URI": "[parameters('AB2C_JWK_URI')]",
            "AB2C_ISS": "[parameters('AB2C_ISS')]",
            "AB2C_AUD_1": "[parameters('AB2C_AUD_1')]",
            "AB2C_AUD_2": "[parameters('AB2C_AUD_2')]",
            "AAD_JWK_URI": "[parameters('AAD_JWK_URI')]",
            "AAD_ISS": "[parameters('AAD_ISS')]",
            "AAD_AUD": "[parameters('AAD_AUD')]",
            "AAD_TENANT": "[parameters('AAD_TENANT')]",
            "AAD_CLIENT_ID": "[parameters('AAD_CLIENT_ID')]",
            "AAD_CLIENT_SECRET": "[parameters('AAD_CLIENT_SECRET')]",
            "AAD_RESOURCE": "[parameters('AAD_RESOURCE')]",
            "DD_TRACE_AGENT_HOSTNAME": "[parameters('DD_TRACE_AGENT_HOSTNAME')]",
            "DD_API_KEY": "[parameters('DD_API_KEY')]",
            "DD_SERVICE_NAME": "yoss-api",
            "DD_ENV": "[parameters('environment')]",
            "SENTRY_DSN": "[parameters('SENTRY_DSN')]",
            "DOCKER_CUSTOM_IMAGE_NAME": "[concat(replace(replace(reference(resourceId('Microsoft.ContainerRegistry/registries', parameters('acrName'))).loginServer,'http://', ''),'https://', ''), '/', parameters('registryName'), ':latest')]",
            "DOCKER_REGISTRY_SERVER_URL": "[reference(resourceId('Microsoft.ContainerRegistry/registries', parameters('acrName'))).loginServer]",
            "DOCKER_REGISTRY_SERVER_USERNAME": "[parameters('acrName')]",
            "DOCKER_REGISTRY_SERVER_PASSWORD": "[listCredentials(resourceId('Microsoft.ContainerRegistry/registries',parameters('acrName')),'2017-03-01').passwords[0].value]"
          }
        }
      ]
    },
    {
      "apiVersion": "2016-08-01",
      "name": "[variables('webAppPortalNameStageSlotFullname')]",
      "type": "Microsoft.Web/sites/slots",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('webAppPortalName'))]",
        "[resourceId('Microsoft.Web/certificates', variables('certificateName'))]"
      ],
      "properties": {
        "httpsOnly": true
      },
      "resources": [
        {
          "apiVersion": "2016-08-01",
          "name": "appsettings",
          "type": "config",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites/Slots', variables('webAppPortalName'), variables('stagingSlotName'))]",
            "[resourceId('Microsoft.Web/certificates', variables('certificateName'))]",
            "[resourceId('Microsoft.Web/Sites', variables('webAppPortalName'))]"
          ],
          "properties": {
            "NODE_ENV": "production",
            "REDIS_HOST": "[variables('redisHost')]",
            "REDIS_PORT": "6380",
            "REDIS_PASSWORD": "[listKeys(resourceId(variables('mainResourceGroupName'), 'Microsoft.Cache/Redis', variables('redisName')), '2015-08-01').primaryKey]",
            "REDIS_TLS": "true",
            "DEBUG_HAPI_TO_CONSOLE": "true",
            "LOG_IN_JSON": "true",
            "LOG_LEVEL": "debug",
            "PORT": "80",
            "UM_API_URL": "[variables('UmServiceUri')]",
            "RD_API_URL": "[variables('RdServiceUri')]",
            "AB2C_JWK_URI": "[parameters('AB2C_JWK_URI')]",
            "AB2C_ISS": "[parameters('AB2C_ISS')]",
            "AB2C_AUD_1": "[parameters('AB2C_AUD_1')]",
            "AB2C_AUD_2": "[parameters('AB2C_AUD_2')]",
            "AAD_JWK_URI": "[parameters('AAD_JWK_URI')]",
            "AAD_ISS": "[parameters('AAD_ISS')]",
            "AAD_AUD": "[parameters('AAD_AUD')]",
            "AAD_TENANT": "[parameters('AAD_TENANT')]",
            "AAD_CLIENT_ID": "[parameters('AAD_CLIENT_ID')]",
            "AAD_CLIENT_SECRET": "[parameters('AAD_CLIENT_SECRET')]",
            "AAD_RESOURCE": "[parameters('AAD_RESOURCE')]",
            "DD_TRACE_AGENT_HOSTNAME": "[parameters('DD_TRACE_AGENT_HOSTNAME')]",
            "DD_SERVICE_NAME": "yoss-api",
            "DD_API_KEY": "[parameters('DD_API_KEY')]",
            "DD_ENV": "[parameters('environment')]",
            "SENTRY_DSN": "[parameters('SENTRY_DSN')]",
            "DOCKER_CUSTOM_IMAGE_NAME": "[concat(replace(replace(reference(resourceId('Microsoft.ContainerRegistry/registries', parameters('acrName'))).loginServer,'http://', ''),'https://', ''), '/', parameters('registryName'), ':latest')]",
            "DOCKER_REGISTRY_SERVER_URL": "[reference(resourceId('Microsoft.ContainerRegistry/registries', parameters('acrName'))).loginServer]",
            "DOCKER_REGISTRY_SERVER_USERNAME": "[parameters('acrName')]",
            "DOCKER_REGISTRY_SERVER_PASSWORD": "[listCredentials(resourceId('Microsoft.ContainerRegistry/registries',parameters('acrName')),'2017-03-01').passwords[0].value]"
          }
        }
      ]
    },
    {
      "type": "Microsoft.Web/sites/slots/hostNameBindings",
      "name": "[concat(variables('webAppPortalNameStageSlotFullname'), '/', parameters('customHostNameSlot'))]",
      "apiVersion": "2016-03-01",
      "location": "[variables('location')]",
      "properties": {
        "sslState": "SniEnabled",
        "thumbprint": "[reference(resourceId('Microsoft.Web/certificates', variables('webappYossCertificateName'))).Thumbprint]"
      },
      "dependsOn": [
        "[concat('Microsoft.Web/certificates/', variables('webappYossCertificateName'))]",
        "[resourceId('Microsoft.Web/sites/hostnameBindings', variables('webAppPortalName'), parameters('customHostName'))]",
        "[resourceId('Microsoft.Web/sites/slots', variables('webAppPortalName'), variables('stagingSlotName'))]"
      ]
    }
  ]
}
